# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chat_pb2 as chat__pb2


class ChatterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.JoinServer = channel.unary_unary(
                '/chat.Chatter/JoinServer',
                request_serializer=chat__pb2.ServerRequest.SerializeToString,
                response_deserializer=chat__pb2.ServerReply.FromString,
                )
        self.LeaveServer = channel.unary_unary(
                '/chat.Chatter/LeaveServer',
                request_serializer=chat__pb2.ServerRequest.SerializeToString,
                response_deserializer=chat__pb2.ServerReply.FromString,
                )
        self.SendText = channel.unary_unary(
                '/chat.Chatter/SendText',
                request_serializer=chat__pb2.SendingText.SerializeToString,
                response_deserializer=chat__pb2.ReceivingText.FromString,
                )
        self.GetText = channel.unary_unary(
                '/chat.Chatter/GetText',
                request_serializer=chat__pb2.GetTextRequest.SerializeToString,
                response_deserializer=chat__pb2.GetTextReply.FromString,
                )


class ChatterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def JoinServer(self, request, context):
        """Join Server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LeaveServer(self, request, context):
        """Leave Server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendText(self, request, context):
        """Send Text
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetText(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'JoinServer': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinServer,
                    request_deserializer=chat__pb2.ServerRequest.FromString,
                    response_serializer=chat__pb2.ServerReply.SerializeToString,
            ),
            'LeaveServer': grpc.unary_unary_rpc_method_handler(
                    servicer.LeaveServer,
                    request_deserializer=chat__pb2.ServerRequest.FromString,
                    response_serializer=chat__pb2.ServerReply.SerializeToString,
            ),
            'SendText': grpc.unary_unary_rpc_method_handler(
                    servicer.SendText,
                    request_deserializer=chat__pb2.SendingText.FromString,
                    response_serializer=chat__pb2.ReceivingText.SerializeToString,
            ),
            'GetText': grpc.unary_unary_rpc_method_handler(
                    servicer.GetText,
                    request_deserializer=chat__pb2.GetTextRequest.FromString,
                    response_serializer=chat__pb2.GetTextReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.Chatter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Chatter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def JoinServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.Chatter/JoinServer',
            chat__pb2.ServerRequest.SerializeToString,
            chat__pb2.ServerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LeaveServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.Chatter/LeaveServer',
            chat__pb2.ServerRequest.SerializeToString,
            chat__pb2.ServerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.Chatter/SendText',
            chat__pb2.SendingText.SerializeToString,
            chat__pb2.ReceivingText.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.Chatter/GetText',
            chat__pb2.GetTextRequest.SerializeToString,
            chat__pb2.GetTextReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
